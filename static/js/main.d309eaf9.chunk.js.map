{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","img/unnamed.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableurl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","console","log","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountires","setFetchedCountires","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","header","headerText","image","src","coronaImg","alt","Charts","footer","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,mBCAnKD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,OAAS,oBAAoB,WAAa,wBAAwB,MAAQ,mBAAmB,OAAS,sB,2NCiD5IC,EA5CD,SAAC,GAA0D,IAAD,IAAvDC,KAAMC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WACjD,OAAIH,EAID,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAIC,IAAKxB,EAAUyB,MAAOC,SAAU,IAAKC,UAAU,OAEvE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAIL,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YACzE,kBAACiB,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAIC,IAAKvB,EAAUwB,MAAOC,SAAU,IAAKC,UAAU,OAEvE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAkB,IAAIQ,KAAKzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,4CAIL,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SACzE,kBAACgB,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAIC,IAAKtB,EAAOuB,MAAOC,SAAU,IAAKC,UAAU,OAEpE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAkB,IAAIQ,KAAKzB,GAAY0B,gBACzD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,0CAlCL,e,yBCLTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,2BAAAC,EAAA,6DACjBC,EAAgBJ,EAEfE,IACAE,EAAa,UAAMJ,EAAN,sBAAuBE,IAJpB,kBAQiDG,IAAMC,IAAIF,GAR3D,2BAQVnC,KAAOC,EARG,EAQHA,UAAWC,EARR,EAQQA,UAAWC,EARnB,EAQmBA,OAAQC,EAR3B,EAQ2BA,WAR3B,kBAWV,CAACH,YAAWC,YAAWC,SAAQC,eAXrB,4FAAH,sDAkBTkC,EAAc,uCAAG,gCAAAJ,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KAEFuC,EAAevC,EAAKwC,KAAI,SAACC,GAAD,MAAgB,CAC1CxC,UAAWwC,EAAUxC,UAAUyC,MAC/BvC,OAAQsC,EAAUtC,OAAOuC,MACzBC,KAAMF,EAAUG,eAPE,kBAUfL,GAVe,yFAAH,qDAgBdM,EAAc,uCAAG,8BAAAX,EAAA,+EAEaE,IAAMC,IAAN,UAAaN,EAAb,eAFb,uBAEPe,EAFO,EAEd9C,KAAO8C,UAFO,kBAIfA,EAAUN,KAAI,SAACP,GAAD,OAAaA,EAAQc,SAJpB,yFAAH,qD,yBCmCZC,EApED,SAAC,GAAqD,IAAD,IAAnDhD,KAAOC,EAA4C,EAA5CA,UAAWE,EAAiC,EAAjCA,OAAQD,EAAyB,EAAzBA,UAAY+B,EAAa,EAAbA,QAAa,EAC7BgB,mBAAS,IADoB,mBACxDR,EADwD,KAC7CS,EAD6C,KAG/DC,qBAAU,WACN,IAAMC,EAAQ,uCAAG,sBAAAlB,EAAA,kEACbgB,EADa,SACMZ,IADN,6EAAH,qDAGde,QAAQC,IAAIb,GAEZW,MACD,IAEH,IAAMG,EACFd,EAAUe,OAEN,kBAAC,IAAD,CACIxD,KAAM,CACFyD,OAAQhB,EAAUD,KAAI,qBAAGG,QACzBe,SAAU,CAAC,CACP1D,KAAOyC,EAAUD,KAAI,qBAAGvC,aACxB0D,MAAO,WACPC,YAAa,UACbC,MAAM,GACP,CAEC7D,KAAOyC,EAAUD,KAAI,qBAAGrC,UACxBwD,MAAO,SACPC,YAAa,MACbE,gBAAiB,kBACjBD,MAAM,OAIb,KAGXE,EACF9D,EAEQ,kBAAC,IAAD,CACID,KAAM,CACFyD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CACjB,oBACA,oBACA,qBAEA9D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAIxDsC,QAAS,CACLC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAqBnC,OAGzD,KAER,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAU8B,EAAWR,I,mCCzCnBc,EArBO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACCrB,mBAAS,IADV,mBACxCsB,EADwC,KACtBC,EADsB,KAU/C,OAPArB,qBAAU,YACQ,uCAAG,sBAAAjB,EAAA,kEACbsC,EADa,SACa3B,IADb,6EAAH,qDAGdO,KACD,CAACoB,IAGA,kBAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOmE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOP,EAAoBO,EAAEC,OAAOpD,SACxE,4BAAQA,MAAM,IAAd,UACC6C,EAAiB/B,KAAI,SAACP,EAAS8C,GAAV,OAAgB,4BAAQC,IAAKD,EAAGrD,MAAOO,GAAUA,S,kCC6BxEgD,E,4MAxCXC,MAAQ,CACJlF,KAAM,GACNiC,QAAS,I,EASjBqC,oB,uCAAsB,WAAOrC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZkD,EADY,OAElB,EAAKC,SAAS,CAAEpF,KAAMmF,EAAalD,QAASA,IAF1B,2C,wPAJYD,I,OAApBmD,E,OAENE,KAAKD,SAAS,CAACpF,KAAMmF,I,qIAOhB,IAAD,EACsBE,KAAKH,MAAvBlF,EADJ,EACIA,KAAMiC,EADV,EACUA,QACd,OACI,yBAAK5B,UAAWC,IAAOC,WACnB,yBAAKF,UAAWC,IAAOgF,QACrB,wBAAIjF,UAAWC,IAAOiF,YAAtB,qBAEF,yBAAKlF,UAAWC,IAAOkF,MAAOC,IAAKC,IAAWC,IAAI,aAClD,kBAAC,EAAD,CAAO3F,KAAMA,IACb,kBAAC,EAAD,CAAesE,oBAAqBe,KAAKf,sBACzC,kBAACsB,EAAD,CAAQ5F,KAAMA,EAAMiC,QAASA,IAE7B,yBAAK5B,UAAWC,IAAOuF,QACnB,gCACI,sDACA,oE,GAjCNC,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDtG,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.d309eaf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__24KVf\",\"card\":\"Cards_card__2uhTm\",\"infected\":\"Cards_infected__11bRe\",\"recovered\":\"Cards_recovered__J3bEC\",\"deaths\":\"Cards_deaths__1RzP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3wJ8O\",\"header\":\"App_header__1C9Gm\",\"headerText\":\"App_headerText__JbLFQ\",\"image\":\"App_image__3TVpV\",\"footer\":\"App_footer__PrwGM\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data:{confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if(!confirmed) {\r\n        return 'Loading....';\r\n    }\r\n    return (\r\n       <div className={styles.container}>\r\n           <Grid container spacing={3} justify=\"center\">\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                   <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0}  end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                   <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recoverd</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0}  end={recovered.value} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries cases of COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                   <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0}  end={deaths.value} duration={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of deths cauesd by COVID-19</Typography>\r\n                   </CardContent>\r\n               </Grid>\r\n           </Grid>\r\n       </div>\r\n    ); \r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableurl = url;\r\n\r\n     if (country) {\r\n         changeableurl = `${url}/countries/${country}`\r\n     }\r\n\r\n    try {\r\n       const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableurl);\r\n\r\n       \r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: {countries}} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country) => country.name);\r\n         \r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        console.log(dailyData);\r\n\r\n        fetchAPI();\r\n    }, [] );\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n            <Line\r\n                data={{\r\n                    labels: dailyData.map(({ date }) => date),\r\n                    datasets: [{\r\n                        data:  dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        \r\n                        data:  dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgb(225,0,0,0.5',\r\n                        fill: true,\r\n                        \r\n                    }],\r\n                }}\r\n            />): null\r\n    );\r\n\r\nconst barChart = (\r\n    confirmed\r\n        ?(\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                        'rgba(0,0,225,0.5)',\r\n                        'rgba(0,225,0,0.5)',\r\n                        'rgba(225,0,0,0.5)',\r\n                        ],\r\n                        data: [confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n\r\n                }}\r\n                options={{\r\n                    legend: { display: false},\r\n                    title: { display: true, text:`Current state in ${country}`},\r\n                }}\r\n            />\r\n        ) : null\r\n)\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountires, setFetchedCountires] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountires(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountires]);\r\n\r\n    return (\r\n        <FormControl className={styles.FormControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Globle</option>\r\n                {fetchedCountires.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react'; \r\n\r\nimport {Cards, Charts, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImg from './img/unnamed.jpg';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        \r\n        this.setState({data: fetchedData});\r\n    }\r\nhandleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country});\r\n\r\n}\r\n    render(){\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.header}>\r\n                  <h1 className={styles.headerText}>COVID-19 Tracker</h1>\r\n                </div>\r\n                <img className={styles.image} src={coronaImg} alt=\"COVID-19\"/>\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Charts data={data} country={country}/>\r\n\r\n                <div className={styles.footer}>\r\n                    <footer>\r\n                        <p>Developed by :- Lakshan</p>\r\n                        <p>Email :- DevSolver37@gmail.com</p>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1bLfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1fZcl\"};","module.exports = __webpack_public_path__ + \"static/media/unnamed.04a5da4d.jpg\";"],"sourceRoot":""}